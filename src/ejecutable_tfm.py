# -*- coding: utf-8 -*-
"""ejecutable_TFM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Os-jHmRcknl1TRsdRYHqbKs2b36S06d

# Imports
"""

import numpy as np
import os
import PIL
from PIL import Image
from tensorflow import keras
import matplotlib.pyplot as plt
import sys
import streamlit as st
import io

st.title('Predicci칩n de tr치fico')

#if (len(sys.argv)==2):
#    image = Image.open('../resources/' + sys.argv[1])
model = keras.models.load_model('models/model04.h5')

#elif (len(sys.argv)==3):
#    image = Image.open('../resources/' + sys.argv[1])
#    model = keras.models.load_model('../models/' + sys.argv[2])
#else:
#    st.write('Usage: python ejecutable_tfm <image> <model_optional>')
#    exit()

#print(image.mode)
#print(image.size)

image_up = st.file_uploader('Imagen a analizar')

if image_up is not None:
    bytes_data = image_up.read()
    image = Image.open(io.BytesIO(bytes_data))
    
    img = np.array(image.resize((32,32)))/255
    st.image(image)

if st.button("Predict"):
    if image_up is None:
        st.error("Por favor, introduce una imagen.")
    else:
        prob_traf = model.predict(img.reshape((1,32,32,3)))[0][0]
        st.write(f'Probabilidad de tr치fico: {prob_traf*100}%')

    #fig, ax = plt.subplots(1)
    #ax.imshow(image, interpolation='nearest')
    #ax.text(image.size[0]/5, image.size[1]/10, f'Probabilidad de tr치fico: {round(prob_traf*100,2)}%', bbox={'facecolor': 'white', 'pad': 10})
    #plt.show()
