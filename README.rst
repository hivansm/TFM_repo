TFM_repo_cookiecutter
=====================

TFM 2022

Getting Started
---------------

To start developing on this project simply bring up the Docker setup:

.. code-block:: console

    docker-compose up

Open your web browser at http://localhost to see the application
you're developing.  Log output will be displayed in the terminal, as usual.

For running tests, linting, security checks, etc. see instructions in the
`tests/ <tests/README.rst>`_ folder.

Integrate External Tools
^^^^^^^^^^^^^^^^^^^^^^^^

Nothing to do here.

Working with Docker
^^^^^^^^^^^^^^^^^^^

Create/destroy development environment:

.. code-block:: console

    docker-compose up       # --build to build containers; -d to daemonize
    docker-compose down     # docker-compose kill && docker-compose rm -af

Start/stop development environment:

.. code-block:: console

    docker-compose start    # resume after 'stop'
    docker-compose stop     # stop containers, but keep them intact

Other useful commands:

.. code-block:: console

    docker-compose ps       # list running containers
    docker-compose logs -f  # view (and follow) container logs

See the `docker-compose CLI reference`_ for other commands.

.. _docker-compose CLI reference: https://docs.docker.com/compose/reference/overview/

CI/CD Process
^^^^^^^^^^^^^

We have 3 environments corresponding to 3 deployments in a single namespace
on our container platform: *development*, *integration*, *production*

- Any merge request triggers a deployment of a review app on *development*.
  When a merge request is merged or closed the review app will automatically
  be removed.
- Any change on the main branch, e.g. when a merge request is merged into
  ``main``, triggers a deployment on *integration*.
- To trigger a deployment on *production* push a Git tag, e.g.

  .. code-block:: console

    git checkout main
    git tag 1.0.0
    git push --tags

Credits
^^^^^^^

Made with â™¥ by `Painless Continuous Delivery`_ Cookiecutter. This project was
generated by:

.. code-block:: console

    cookiecutter gh:painless-software/painless-continuous-delivery \
        project_name="TFM_repo_cookiecutter" \
        project_description="TFM 2022" \
        vcs_platform="GitHub.com" \
        vcs_account="hivansm" \
        vcs_project="tfm_repo_cookiecutter" \
        ci_service="codeship-steps.yml" \
        cloud_platform="(none)" \
        cloud_account="platform-username" \
        cloud_project="tfm_repo_cookiecutter" \
        environment_strategy="shared" \
        deployment_strategy="pipeline" \
        gitops_project="(none)" \
        docker_registry="quay.io" \
        registry_user="codeship" \
        automation_user="codeship" \
        framework="(none)" \
        database="(none)" \
        cronjobs="(none)" \
        checks="" \
        tests="" \
        monitoring="(none)" \
        license="Proprietary" \
        --no-input

.. _Painless Continuous Delivery: https://github.com/painless-software/painless-continuous-delivery/
